version: '3.4'

# 内部网络，提供gitlab和gitlab-runner使用
# 可定义aliases，使用内部网络的服务器，可直接通过aliases访问到对应主机，不需要使用links
# link: http://andrewtarry.com/docker_compose/
networks:
  gitlab-network:
    driver: bridge

services:
  mongodb:
    restart: always
    image: mongo
    container_name: mongodb
    volumes:
      - ./services/mongodb/conf:/data/db
    stdin_open: true
    tty: true

  gitlab:
    restart: always
    image: gitlab/gitlab-ce
    hostname: $gitlab_host_name
    container_name: gitlab
    environment:
      external_common_mounts_path: $external_common_mounts_path
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://$gitlab_host_name:$gitlab_port'
        gitlab_rails['gitlab_shell_ssh_port'] = $gitlab_ssh_port
    ports:
      - "$gitlab_port:$gitlab_port"
      # gitlab默认使用ssh22端口，这里配置端口只是把端口指向改变了
      # 并未在制定端口开启ssh监听
      - "$gitlab_ssh_port:22"
    networks:
      gitlab-network:
        # 内部网扩中暴露gitlab的host别名，提供给gitlab-runner使用
        # 在gitlab-runner中执行pipeline.job时，会请求项目的ssh中的连接，就是$gitlab_host_name
        # 使用别名直接访问内部主机的host，而不是依赖外部提供的host，解耦更强，方便复用
        aliases:
          - $gitlab_host_name
    volumes:
      - ./services/gitlab/conf/config:/etc/gitlab
      - ./services/gitlab/conf/logs:/var/log/gitlab
      - ./services/gitlab/conf/data:/var/opt/gitlab
      - ./mounts:$external_common_mounts_path

  gitlab-runner:
    restart: always
    build: 
      context: ./services/gitlab-runner
    # 安装docker，但，daemon无法启动过
    # image: gitlab/gitlab-runner
    container_name: gitlab-runner
    depends_on:
      - gitlab
    networks:
      gitlab-network:
        aliases:
          - $gitlab_runner_host_name
    environment:
      - gitlab_host_name=$gitlab_host_name
    volumes:
      - ./mounts:$external_common_mounts_path
      - ./services/gitlab-runner/conf:/etc/gitlab-runner
      - ./services/gitlab-runner/conf/docker.sock:/var/run/docker.sock
    stdin_open: true
    tty: true
    # 提权，不然使用 systemctl 命令会报错
    privileged: true

  jenkins:
    restart: always
    build:
      context: ./services/jenkins
      args:
        - jenkins_home_path=$jenkins_home_path
    container_name: jenkins
    networks:
      gitlab-network:
        aliases:
          - $jenkins_host_name
    ports:
      - "$jenkins_port:8080"
    volumes:
      - ./services/jenkins/conf:/var/jenkins_home
      - ./mounts:$external_common_mounts_path
    environment:
      - external_common_mounts_path=$external_common_mounts_path
      - jenkins_user=$jenkins_user
      - jenkins_pass=$jenkins_pass
      - jenkins_home_path=$jenkins_home_path
      - jenkins_add_credential_filename=$jenkins_add_credential_filename
      - jenkins_executer_folder_name=$jenkins_executer_folder_name
      - gitlab_port=$gitlab_port
      - gitlab_host_name=$gitlab_host_name
    stdin_open: true
    tty: true

  webhooks:
    build:
      context: ./services/webhooks
    container_name: webhooks
    ports:
      - "$webhooks_port:3000"
    volumes:
      - ./mounts:$external_common_mounts_path
    stdin_open: true
    tty: true

  docs:
    build:
      context: ./services/docs
    container_name: docs
    ports:
      - "$doc_server_port:3000"
    volumes:
      - ./mounts:$external_common_mounts_path
    environment:
      - external_common_mounts_path=$external_common_mounts_path
    stdin_open: true
    tty: true
